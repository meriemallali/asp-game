/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.12 defeated-maincharacter.glb 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
// import { Canvas,useThree  } from "@react-three/fiber";


export default function Model(props) {
  // to control the character position.
  // const { size } = useThree();
  // const centerX = size.width / 2;
  // const centerY = size.height / 2;
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/assets/characters/main/defeated-maincharacter.glb')
  const { actions } = useAnimations(animations, group)
  useEffect(()=>{
    // console.log(actions)
    actions.defeated.play()
  })
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.012} position={[0, -2, 0]} >
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Alpha_Joints" geometry={nodes.Alpha_Joints.geometry} material={materials.Alpha_Joints_MAT} skeleton={nodes.Alpha_Joints.skeleton} />
          <skinnedMesh name="Alpha_Surface" geometry={nodes.Alpha_Surface.geometry} material={materials.Alpha_Body_MAT} skeleton={nodes.Alpha_Surface.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/assets/characters/main/defeated-maincharacter.glb')
